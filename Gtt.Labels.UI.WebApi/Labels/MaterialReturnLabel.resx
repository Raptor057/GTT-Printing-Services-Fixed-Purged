<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox7.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>